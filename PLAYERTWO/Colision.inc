;THE FUNCTIONALITY OF THIS CODE IS DRAWING THE CAR

collisionCOLOR1 EQU 14 ;FOR TRACK
collisionCOLOR2 EQU  4 ;FOR CAR1
collisionCOLOR3 EQU 65 ;FOR CAR2
ROAD_COLOR_BEGIN equ 6              ;brown
ROAD_COLOR_END  equ 1               ;blue


CheckColisionCar1 PROC FAR
    CMP EXPECTEDSTATE1 , 0      
    JNZ COLISION1_KOBRY11
    ;PERFORM EQUATION CENTER-(WIDTH/2)-(320*HEIGHT/2) TO GET TOP LEFT POINT OF THE CAR (TOP LEFT IN THE SCREEN)
    ;CALCULATE (320*HEIGHT/2) TERM
    MOV BX,320          
    MOV AX,HEIGHT1
    shr AX,1
    ADD AX,SPEED1
    MUL BX
    PUSH AX

    ;CALCULATE WIDTH/2 TERM
    MOV AX , WIDTH1
    shr AX,1

    ;GET THE REQUIRED POINT
    MOV BX , CENTER1
    SUB BX ,AX
    POP AX
    SUB BX,AX
    MOV AX,BX

    PUSH BX
    MOV DX,HEIGHT1  
COLISION1_UPROW1:
    MOV SI,AX
    MOV CX,WIDTH1
    JMP COLISION1_LOOP11

COLISION1_KOBRY11:
JMP COLISION1_RIGHT1

COLISION1_LOOP11:
    MOV AL, ES:[SI]
    CMP AL, ROAD_COLOR_END
    JZ COLISION1_WIN11
    JMP COLISION1_NOT_WIN11
COLISION1_WIN11:
    MOV playerOneWin, 1
COLISION1_NOT_WIN11:

    CMP AL, ROAD_COLOR_BEGIN
    JZ COLISION1_CANTMOVETRACKUP1
    CMP AL, collisionCOLOR1
    JZ COLISION1_CANTMOVETRACKUP1   ; ->THIS PIXEL HAS COLOUR OF THE OBSTACLE SO CAR CAN'T MOVE
    CMP AL, collisionCOLOR3
    JZ COLISION1_CANTMOVETRACKUP1   ; ->THIS PIXEL HAS COLOUR OF THE CAR2 SO CAR CAN'T MOVE
    CMP AL, 10d
    JZ COLISION1_CANTMOVEOBSTACKUP1   ; ->THIS PIXEL HAS COLOUR OF THE CAR2 SO CAR CAN'T MOVE
    INC SI
    LOOP COLISION1_LOOP11
    POP AX
    ADD AX,320      ; MOVE TO THE NEXT ROW
    PUSH AX
    DEC DX          
    CMP DX , 0
    JNZ COLISION1_UPROW1
    POP AX
    MOV AL,1
    MOV CANMOVEOBSTACLE1,AL
    MOV CANMOVETRACK1,AL
    JMP COLISION1_EXIT1

COLISION1_CANTMOVETRACKUP1:
    POP AX
    MOV AL,0
    MOV CANMOVEOBSTACLE1,AL
    MOV CANMOVETRACK1,AL
    JMP COLISION1_EXIT1

COLISION1_CANTMOVEOBSTACKUP1:
    POP AX
    MOV AL,0
    MOV CANMOVEOBSTACLE1,AL
    INC AL
    MOV CANMOVETRACK1,AL
    JMP COLISION1_EXIT1


COLISION1_RIGHT1:
    CMP EXPECTEDSTATE1 , 1
    JNZ COLISION1_KOBRY12
    ;PERFORM EQUATION CENTER-(WIDTH*320/2)+(HEIGHT/2) TO GET TOP LEFT POINT OF THE CAR (TOP RIGHT IN THE SCREEN)
    ;CALCULATE (HEIGHT/2) TERM
    MOV AX , HEIGHT1
    shr AX,1
    ADD AX,SPEED1
    PUSH AX

    ;CALCULATE WIDTH*320/2 TERM
    MOV BX,320
    MOV AX,WIDTH1
    shr AX,1
    MUL BX

    ;GET THE REQUIRED POINT
    MOV BX , CENTER1
    SUB BX ,AX
    POP AX
    ADD BX,AX
    MOV AX,BX
    PUSH BX
    MOV DX,HEIGHT1
COLISION1_RIGHTCOLUMN1:
    MOV SI,AX
    MOV CX,WIDTH1
    JMP COLISION1_LOOP12

COLISION1_KOBRY12:
JMP COLISION1_LEFT1

COLISION1_LOOP12:
    MOV AL, ES:[SI]
    CMP AL, ROAD_COLOR_END
    JZ COLISION1_WIN12
    JMP COLISION1_NOT_WIN12
COLISION1_WIN12:
    MOV playerOneWin, 1
COLISION1_NOT_WIN12:

    CMP AL, ROAD_COLOR_BEGIN
    JZ COLISION1_CANTMOVETRACKRIGHT1
    CMP AL, collisionCOLOR1
    JZ COLISION1_CANTMOVETRACKRIGHT1
    CMP AL, collisionCOLOR3
    JZ COLISION1_CANTMOVETRACKRIGHT1
    CMP AL, 10d
    JZ COLISION1_CANTMOVEOBSTACLERIGHT1 
    ADD SI,320
    LOOP COLISION1_LOOP12
    POP AX
    SUB AX,1
    PUSH AX
    DEC DX
    CMP DX , 0
    JNZ COLISION1_RIGHTCOLUMN1
    POP AX
    MOV AL,1
    MOV CANMOVEOBSTACLE1,AL
    MOV CANMOVETRACK1,AL
    JMP COLISION1_EXIT1

COLISION1_CANTMOVETRACKRIGHT1:
    POP AX
    MOV AL,0
    MOV CANMOVEOBSTACLE1,AL
    MOV CANMOVETRACK1,AL
    JMP COLISION1_EXIT1
COLISION1_CANTMOVEOBSTACLERIGHT1:
    POP AX
    MOV AL,0
    MOV CANMOVEOBSTACLE1,AL
    INC AL
    MOV CANMOVETRACK1,AL
    JMP COLISION1_EXIT1



COLISION1_LEFT1:
    CMP EXPECTEDSTATE1,2
    JNZ COLISION1_KOBRY13

    ;PERFORM EQUATION CENTER+(WIDTH*320/2)-(HEIGHT/2) TO GET TOP LEFT POINT OF THE CAR (BOTTOM LEFT IN THE SCREEN)
    ;CALCULATE (HEIGHT/2) TERM
    MOV AX , HEIGHT1
    shr AX,1
    ADD AX,SPEED1
    PUSH AX

    ;CALCULATE WIDTH*320/2 TERM
    MOV BX,320
    MOV AX,WIDTH1
    shr AX,1
    MUL BX

    ;GET THE REQUIRED POINT
    MOV BX , CENTER1
    ADD BX ,AX
    POP AX
    SUB BX,AX


    MOV AX,BX
    PUSH BX
    MOV DX,HEIGHT1

COLISION1_LEFTCOLUMN1:
    MOV SI,AX
    MOV CX,WIDTH1
    JMP COLISION1_LOOP13

COLISION1_KOBRY13:
JMP COLISION1_DOWN1

COLISION1_LOOP13: 
    MOV AL, ES:[SI]
    CMP AL, ROAD_COLOR_END
    JZ COLISION1_WIN13
    JMP COLISION1_NOT_WIN13
COLISION1_WIN13:
    MOV playerOneWin, 1
COLISION1_NOT_WIN13:
    CMP AL, ROAD_COLOR_BEGIN
    JZ COLISION1_CANTMOVETRACKLEFT1
    CMP AL, collisionCOLOR1
    JZ COLISION1_CANTMOVETRACKLEFT1
    CMP AL, collisionCOLOR3
    JZ COLISION1_CANTMOVETRACKLEFT1
    CMP AL, 10d
    JZ COLISION1_CANTMOVEOBSTACLELEFT1
    SUB SI,320
    LOOP COLISION1_LOOP13
    POP AX
    ADD AX,1
    PUSH AX
    DEC DX
    CMP DX , 0
    JNZ COLISION1_LEFTCOLUMN1
    POP AX
    MOV AL,1
    MOV CANMOVEOBSTACLE1,AL
    MOV CANMOVETRACK1,AL
    JMP COLISION1_EXIT1

COLISION1_CANTMOVETRACKLEFT1:
    POP AX
    MOV AL,0
    MOV CANMOVEOBSTACLE1,AL
    MOV CANMOVETRACK1,AL
    JMP COLISION1_EXIT1
COLISION1_CANTMOVEOBSTACLELEFT1:
    POP AX
    MOV AL,0
    MOV CANMOVEOBSTACLE1,AL
    INC AL
    MOV CANMOVETRACK1,AL
    JMP COLISION1_EXIT1

COLISION1_DOWN1:
;PERFORM EQUATION CENTER+(WIDTH/2)+(320*HEIGHT/2) TO GET TOP LEFT POINT OF THE CAR (TOP LEFT IN THE SCREEN)
;CALCULATE (320*HEIGHT/2) TERM
MOV BX,320
MOV AX,HEIGHT1
shr AX,1
ADD AX,SPEED1
MUL BX
PUSH AX

;CALCULATE WIDTH/2 TERM
MOV AX , WIDTH1
shr AX,1

;GET THE REQUIRED POINT
MOV BX , CENTER1
ADD BX ,AX
POP AX
ADD BX,AX


MOV AX,BX
PUSH BX
MOV DX,HEIGHT1

COLISION1_DOWNROW1:
MOV SI,AX
MOV CX,WIDTH1

COLISION1_LOOP14:
MOV AL, ES:[SI]
    CMP AL, ROAD_COLOR_END
    JZ COLISION1_WIN14
    JMP COLISION1_NOT_WIN14
COLISION1_WIN14:
    MOV playerOneWin, 1
COLISION1_NOT_WIN14:
CMP AL, ROAD_COLOR_BEGIN
JZ COLISION1_CANTMOVETRACKDOWN1
CMP AL, collisionCOLOR1
JZ COLISION1_CANTMOVETRACKDOWN1
CMP AL, collisionCOLOR3
JZ COLISION1_CANTMOVETRACKDOWN1
CMP AL, 10d
JZ COLISION1_CANTMOVEOBSTACLEDOWN1
DEC SI
LOOP COLISION1_LOOP14
POP AX
SUB AX,320
PUSH AX
DEC DX
CMP DX , 0
JNZ COLISION1_DOWNROW1
POP AX
MOV AL,1
MOV CANMOVEOBSTACLE1,AL
MOV CANMOVETRACK1,AL
JMP COLISION1_EXIT1

COLISION1_CANTMOVETRACKDOWN1:
    POP AX
    MOV AL,0
    MOV CANMOVEOBSTACLE1,AL
    MOV CANMOVETRACK1,AL
    JMP COLISION1_EXIT1
COLISION1_CANTMOVEOBSTACLEDOWN1:
    POP AX
    MOV AL,0
    MOV CANMOVEOBSTACLE1,AL
    INC AL
    MOV CANMOVETRACK1,AL
    JMP COLISION1_EXIT1 
COLISION1_EXIT1:
RET
CheckColisionCar1 ENDP






;----------------------------------------------------------------------------------------
;----------------------------------------------------------------------------------------
;----------------------------------------------------------------------------------------
;----------------------------------------------------------------------------------------
;----------------------------------------------------------------------------------------
;----------------------------------------------------------------------------------------






CheckColisionCar2 PROC FAR
CMP EXPECTEDSTATE2 , 0      
JNZ COLISION2_RIGHT2
;PERFORM EQUATION CENTER-(WIDTH/2)-(320*HEIGHT/2) TO GET TOP LEFT POINT OF THE CAR (TOP LEFT IN THE SCREEN)
;CALCULATE (320*HEIGHT/2) TERM
MOV BX,320          
MOV AX,HEIGHT2
shr AX,1
ADD AX,SPEED2
MUL BX
PUSH AX

;CALCULATE WIDTH/2 TERM
MOV AX , WIDTH2
shr AX,1

;GET THE REQUIRED POINT
MOV BX , CENTER2
SUB BX ,AX
POP AX
SUB BX,AX

MOV AX,BX
PUSH BX
MOV DX,HEIGHT2 
COLISION2_UPROW2:
MOV SI,AX
MOV CX,WIDTH2


COLISION2_LOOP21:
MOV AL, ES:[SI]
    CMP AL, ROAD_COLOR_END
    JZ COLISION2_WIN21
    JMP COLISION2_NOT_WIN21
COLISION2_WIN21:
    MOV playerTwoWin, 1
COLISION2_NOT_WIN21:
CMP AL, ROAD_COLOR_BEGIN
JZ COLISION2_CANTMOVETRACKUP2
CMP AL, collisionCOLOR1
JZ COLISION2_CANTMOVETRACKUP2   ; ->THIS PIXEL HAS COLOUR OF THE OBSTACLE SO CAR CAN'T MOVE
CMP AL, collisionCOLOR2
JZ COLISION2_CANTMOVETRACKUP2   ; ->THIS PIXEL HAS COLOUR OF THE CAR1 SO CAR CAN'T MOVE
CMP AL, 10d
JZ COLISION2_CANTMOVEOBSTACLEUP2   ; ->THIS PIXEL HAS COLOUR OF THE obstacle SO CAR CAN'T MOVE
INC SI
LOOP COLISION2_LOOP21
POP AX
ADD AX,320      ; MOVE TO THE NEXT ROW
PUSH AX
DEC DX          
CMP DX , 0
JNZ COLISION2_UPROW2
POP AX
MOV AL,1
MOV CANMOVEOBSTACLE2,AL
MOV CANMOVETRACK2,AL
JMP COLISION2_EXIT2

COLISION2_CANTMOVETRACKUP2:
POP AX
MOV AL,0
MOV CANMOVETRACK2,AL
JMP COLISION2_EXIT2
COLISION2_CANTMOVEOBSTACLEUP2:
POP AX
MOV AL,0
MOV CANMOVEOBSTACLE2,AL
INC AL
MOV CANMOVETRACK2,AL
JMP COLISION2_EXIT2


COLISION2_RIGHT2:
CMP EXPECTEDSTATE2 , 1
JNZ COLISION2_KOBRY22
;PERFORM EQUATION CENTER-(WIDTH*320/2)+(HEIGHT/2) TO GET TOP LEFT POINT OF THE CAR (TOP RIGHT IN THE SCREEN)
;CALCULATE (HEIGHT/2) TERM
MOV AX , HEIGHT2
shr AX,1
ADD AX,SPEED2
PUSH AX

;CALCULATE WIDTH*320/2 TERM
MOV BX,320
MOV AX,WIDTH2
shr AX,1
MUL BX

;GET THE REQUIRED POINT
MOV BX , CENTER2
SUB BX ,AX
POP AX
ADD BX,AX
PUSH BX
MOV AX,BX
MOV DX,HEIGHT2
COLISION2_RIGHTCOLUMN2:
MOV SI,AX
MOV CX,WIDTH2
JMP COLISION2_LOOP22

COLISION2_KOBRY22:
JMP COLISION2_LEFT2

COLISION2_LOOP22:
MOV AL, ES:[SI]
    CMP AL, ROAD_COLOR_END
    JZ COLISION2_WIN22
    JMP COLISION2_NOT_WIN22
COLISION2_WIN22:
    MOV playerTwoWin, 1
COLISION2_NOT_WIN22:
CMP AL, ROAD_COLOR_BEGIN
JZ COLISION2_CANTMOVETRACKRIGHT2
CMP AL, collisionCOLOR1
JZ COLISION2_CANTMOVETRACKRIGHT2
CMP AL, collisionCOLOR2
JZ COLISION2_CANTMOVETRACKRIGHT2
CMP AL, 10d
JZ COLISION2_CANTMOVEOBSTACLERIGHT2
ADD SI,320
LOOP COLISION2_LOOP22
POP AX
SUB AX,1
PUSH AX
DEC DX
CMP DX , 0
JNZ COLISION2_RIGHTCOLUMN2
POP AX
MOV AL,1
MOV CANMOVEOBSTACLE2,AL
MOV CANMOVETRACK2,AL
JMP COLISION2_EXIT2

COLISION2_CANTMOVETRACKRIGHT2:
POP AX
MOV AL,0
MOV CANMOVETRACK2,AL
JMP COLISION2_EXIT2
COLISION2_CANTMOVEOBSTACLERIGHT2:
POP AX
MOV AL,0
MOV CANMOVEOBSTACLE2,AL
INC AL
MOV CANMOVETRACK2,AL
JMP COLISION2_EXIT2



COLISION2_LEFT2:
CMP EXPECTEDSTATE2,2
JNZ COLISION2_KOBRY23

;PERFORM EQUATION CENTER+(WIDTH*320/2)-(HEIGHT/2) TO GET TOP LEFT POINT OF THE CAR (BOTTOM LEFT IN THE SCREEN)
;CALCULATE (HEIGHT/2) TERM
MOV AX , HEIGHT2
shr AX,1
ADD AX,SPEED2
PUSH AX

;CALCULATE WIDTH*320/2 TERM
MOV BX,320
MOV AX,WIDTH2
shr AX,1
MUL BX

;GET THE REQUIRED POINT
MOV BX , CENTER2
ADD BX ,AX
POP AX
SUB BX,AX

PUSH BX
MOV AX,BX
MOV DX,HEIGHT2

COLISION2_LEFTCOLUMN2:
MOV SI,AX
MOV CX,WIDTH2
JMP COLISION2_LOOP23

COLISION2_KOBRY23:
JMP COLISION2_DOWN2

COLISION2_LOOP23: 
MOV AL, ES:[SI]
    CMP AL, ROAD_COLOR_END
    JZ COLISION2_WIN23
    JMP COLISION2_NOT_WIN23
COLISION2_WIN23:
    MOV playerTwoWin, 1
COLISION2_NOT_WIN23:
CMP AL, ROAD_COLOR_BEGIN
JZ COLISION2_CANTMOVETRACKLEFT2
CMP AL, collisionCOLOR1
JZ COLISION2_CANTMOVETRACKLEFT2
CMP AL, collisionCOLOR2
JZ COLISION2_CANTMOVETRACKLEFT2
CMP AL, 10d
JZ COLISION2_CANTMOVEOBSTACLELEFT2
SUB SI,320
LOOP COLISION2_LOOP23
POP AX
ADD AX,1
PUSH AX
DEC DX
CMP DX , 0
JNZ COLISION2_LEFTCOLUMN2
POP AX
MOV AL,1
MOV CANMOVEOBSTACLE2,AL
MOV CANMOVETRACK2,AL
JMP COLISION2_EXIT2

COLISION2_CANTMOVETRACKLEFT2:
POP AX
MOV AL,0
MOV CANMOVETRACK2,AL
JMP COLISION2_EXIT2

COLISION2_CANTMOVEOBSTACLELEFT2:
POP AX
MOV AL,0
MOV CANMOVEOBSTACLE2,AL
INC AL
MOV CANMOVETRACK2,AL
JMP COLISION2_EXIT2

COLISION2_DOWN2:
;PERFORM EQUATION CENTER+(WIDTH/2)+(320*HEIGHT/2) TO GET TOP LEFT POINT OF THE CAR (TOP LEFT IN THE SCREEN)
;CALCULATE (320*HEIGHT/2) TERM
MOV BX,320
MOV AX,HEIGHT2
shr AX,1
ADD AX,SPEED2
MUL BX
PUSH AX

;CALCULATE WIDTH/2 TERM
MOV AX , WIDTH2
shr AX,1

;GET THE REQUIRED POINT
MOV BX , CENTER2
ADD BX ,AX
POP AX
ADD BX,AX

PUSH BX
MOV AX,BX
MOV DX,HEIGHT2

COLISION2_DOWNROW2:
MOV SI,AX
MOV CX,WIDTH2

COLISION2_LOOP24:
MOV AL, ES:[SI]
    CMP AL, ROAD_COLOR_END
    JZ COLISION2_WIN24
    JMP COLISION2_NOT_WIN24
COLISION2_WIN24:
    MOV playerTwoWin, 1
COLISION2_NOT_WIN24:
CMP AL, ROAD_COLOR_BEGIN
JZ COLISION2_CANTMOVETRACKDOWN2
CMP AL, collisionCOLOR1
JZ COLISION2_CANTMOVETRACKDOWN2
CMP AL, collisionCOLOR2
JZ COLISION2_CANTMOVETRACKDOWN2
CMP AL, 10d
JZ COLISION2_CANTMOVEOBSTACLEDOWN2
DEC SI
LOOP COLISION2_LOOP24
POP AX
SUB AX,320
PUSH AX
DEC DX
CMP DX , 0
JNZ COLISION2_DOWNROW2
POP AX
MOV AL,1
MOV CANMOVEOBSTACLE2,AL
MOV CANMOVETRACK2,AL
JMP COLISION2_EXIT2

COLISION2_CANTMOVETRACKDOWN2:
POP AX
MOV AL,0
MOV CANMOVETRACK2,AL
JMP COLISION2_EXIT2

COLISION2_CANTMOVEOBSTACLEDOWN2:
POP AX
MOV AL,0
MOV CANMOVEOBSTACLE2,AL
INC AL
MOV CANMOVETRACK2,AL
JMP COLISION2_EXIT2
COLISION2_EXIT2:
RET
CheckColisionCar2 ENDP
