

Play PROC FAR

    ResetVariables

    CALL FAR PTR ORIG2
    CALL FAR PTR CAR2
    CALL FAR PTR ORIG1
    CALL FAR PTR CAR1

    SetCursor 21,0
    DisplayString user1Data
    SetCursor 22,0
    DisplayString powerups1
    SetCursor 21,21
    DisplayString user2Data
    SetCursor 22,21
    DisplayString powerups2

    MOV CX,10
    MOV DI,2000
    MOV AL,SPEED_UP_COLOR
    REP STOSB

    MOV CX,10
    MOV DI,2150
    MOV AL,SPEED_DOWN_COLOR
    REP STOSB
    MOV CX,10
    MOV DI,2100
    MOV AL,GENERATE_OBSTACLE_COLOR
    REP STOSB
    MOV CX,10
    MOV DI,2200
    MOV AL,PASS_OBSTACLE_COLOR
    REP STOSB

    MOV AH,2CH
    INT 21H
    MOV STARTINGTIME,DH
    MOV TIMER,RACETIME

   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
AGAIN:
    MOV AH,2CH
    INT 21H
    CMP DH,STARTINGTIME
    JE CONTINUERACE
    DEC TIMER
    MOV STARTINGTIME,DH
    DISPLAYTIMER 20,18,TIMER
    CMP TIMER,0
    JNE CONTINUERACE
    JMP CAR_EXIT
    SetCursor 15,15
;    DisplayString TIMEOUTMSG
CONTINUERACE:

    CMP SPEEDUP_CAR1, 1
    JNE KOBRY120
    SetCursor 22, 10
    DisplayString spaceMsg
    SetCursor 22, 10
    DisplayString msgUP

    JMP KOBRY124
KOBRY120:
    CMP SPEEDDOWN_CAR1, 1
    JNE KOBRY121
    SetCursor 22, 10
    DisplayString spaceMsg
    SetCursor 22, 10
    DisplayString msgDown

    JMP KOBRY124
KOBRY121:
    CMP OBSTACLE_CAR1, 1
    JNE KOBRY122
    SetCursor 22, 10
    DisplayString spaceMsg
    SetCursor 22, 10
    DisplayString msgGOB

    JMP KOBRY124
KOBRY122:
    CMP PASS_CAR1, 1
    JNE KOBRY123
    SetCursor 22, 10
    DisplayString spaceMsg
    SetCursor 22, 10
    DisplayString msgOB
    JMP KOBRY124
KOBRY123:
    SetCursor 22, 10
    DisplayString spaceMsg

KOBRY124:

    CMP SPEEDUP_CAR2, 1
    JNE KOBRY220
    SetCursor 22, 31
    DisplayString spaceMsg
    SetCursor 22, 31
    DisplayString msgUP

    JMP KOBRY224
KOBRY220:
    CMP SPEEDDOWN_CAR2, 1
    JNE KOBRY221
    SetCursor 22, 31
    DisplayString spaceMsg
    SetCursor 22, 31
    DisplayString msgDown

    JMP KOBRY224
KOBRY221:
    CMP OBSTACLE_CAR2, 1
    JNE KOBRY222
    SetCursor 22, 31
    DisplayString spaceMsg
    SetCursor 22, 31
    DisplayString msgGOB

    JMP KOBRY224
KOBRY222:
    CMP PASS_CAR2, 1
    JNE KOBRY223
    SetCursor 22, 31
    DisplayString spaceMsg
    SetCursor 22, 31
    DisplayString msgOB
    JMP KOBRY224
KOBRY223:
    SetCursor 22, 31
    DisplayString spaceMsg

KOBRY224:


    mov ah, 2ch
    int 21h
    CMP DH, currentSecond
    JE KOBRY4
    MOV currentSecond, DH
    INC counterForPU
    CMP counterForPU, 2
    JL KOBRY4
    MOV counterForPU, 0
    CALL FAR PTR GeneratePowerUps

KOBRY4:
    CMP playerOneWin, 1
    JE KOBRY1
    CMP playerTwoWin, 1
    JE KOBRY2
    CMP COUNT1,0
    JE KOBRY0
    MOV  AH, 2ch                   ;get sysytem time to get the dx mellisecond
    INT  21h
    CMP DH,STARTTIME1
    JE KOBRY0
    MOV STARTTIME1,DH
    DEC COUNT1
    CMP COUNT1,0 
    JNE KOBRY0
    CMP ACTIVEUP_CAR1 , 1
    JNE CONT2
    DEC SPEED1
    MOV ACTIVEUP_CAR1 , 0
    JMP CONT1
CONT2:
    INC SPEED2
    MOV ACTIVEDOWN_CAR1 , 0
    JMP KOBRY22

KOBRY0:
    JMP CONT1

KOBRY1:
    SetCursor 16, 12
    DisplayString user1Data
    SetCursor 17, 12 
    DisplayString msg4
    BigDelay
    JMP AA2_1

KOBRY2:
    SetCursor 16, 12
    DisplayString user2Data
    SetCursor 17, 12
    DisplayString msg4
    BigDelay
    JMP AA2_1

KOBRY22:

CONT1:
    CMP COUNT2,0
    JE CONT3
    MOV  AH, 2ch                   ;get sysytem time to get the dx mellisecond
    INT  21h
    CMP DH,STARTTIME2
    JE CONT3
    MOV STARTTIME2,DH
    DEC COUNT2
    CMP COUNT2,0
    JNE CONT3
    CMP ACTIVEUP_CAR2 , 1
    JNE CONT4
    DEC SPEED2
    MOV ACTIVEUP_CAR2 , 0
    JMP CONT3
CONT4:
    MOV ACTIVEDOWN_CAR2 , 0
    INC SPEED1

CONT3:
    CMP shouldExit, 01H             ;;CHECK IF THE EXIT KEY IS PRESSED
    JE AA2_1
    
     CMP moveDirectionUpC1, 1          ;;CHECK IF THE UP ARROW KEY IS PRESSED
    JNZ RIGHT1_1
    MOV AL,0
    MOV EXPECTEDSTATE1,AL
    CALL FAR PTR CheckColisionCar1 
    CMP CANMOVETRACK1,0
    JZ EXITUP1
    CMP CANMOVEOBSTACLE1,1
    JZ  LABELUP1
    CMP CANPASS_CAR1,1
    JZ LABELUP2
    JMP EXITUP1
    AA2_1:JMP AA2
    RIGHT1_1:JMP RIGHT1
    STARTUP1:
    CALL FAR PTR RESETCAR1
    MOV STATE1,0
    MOV AX,320
    MOV DX,SPEED1
    MUL DX
    SUB CENTER1,AX
    CALL FAR PTR ORIG1
    CMP ACTIVEUP_CAR1,1
    JE CONT5        
    CMP ACTIVEDOWN_CAR1,1
    JE CONT5
    CMP CANPASS_CAR1,1
    JE CONT5        
    CALL FAR PTR SPEEDUP1
    CALL FAR PTR SPEEDDOWN1
    CALL FAR PTR OBSTACLECAR1
    CALL FAR PTR PASSOBSTACLE_CAR1
CONT5: CALL FAR PTR CAR1
    JMP EXITUP1
LABELUP1:
        CMP CHECKPASSEDOBSTACLE1,0
        JZ STARTUP1
        MOV CANPASS_CAR1,0
        MOV CHECKPASSEDOBSTACLE1,0
        JMP STARTUP1
    LABELUP2:
    MOV CHECKPASSEDOBSTACLE1,1
    JMP STARTUP1
    EXITUP1:
    JMP RIGHT1

AA2:JMP AA

RIGHT1:
    CMP moveDirectionRightC1, 1       ;;CHECK IF THE RIGHT ARROW KEY IS PRESSED
    JNZ LEFT1_1
    MOV AL,1
    MOV EXPECTEDSTATE1,AL
    CALL FAR PTR CheckColisionCar1 
    CMP CANMOVETRACK1,0
    JZ EXITRIGHT1
    CMP CANMOVEOBSTACLE1,1
    JZ  LABELRIGHT1
    CMP CANPASS_CAR1,1
    JZ LABELRIGHT2
    JMP EXITRIGHT1
LEFT1_1:JMP LEFT1
    STARTRIGHT1: 
    CALL FAR PTR RESETCAR1
    MOV STATE1 ,1
    MOV AX,SPEED1
    ADD CENTER1,AX
    CALL FAR PTR ORIG1
    CMP ACTIVEUP_CAR1,1
    JE CONT6       
    CMP ACTIVEDOWN_CAR1,1
    JE CONT6
    CMP CANPASS_CAR1,1
    JE CONT6        
    CALL FAR PTR SPEEDUP1
    CALL FAR PTR SPEEDDOWN1
    CALL FAR PTR OBSTACLECAR1
    CALL FAR PTR PASSOBSTACLE_CAR1
CONT6:CALL FAR PTR CAR1
    JMP EXITRIGHT1
    LABELRIGHT1:
        CMP CHECKPASSEDOBSTACLE1,0
        JZ STARTRIGHT1
        MOV CANPASS_CAR1,0
        MOV CHECKPASSEDOBSTACLE1,0
        JMP STARTRIGHT1
    LABELRIGHT2:
    MOV CHECKPASSEDOBSTACLE1,1
    JMP STARTRIGHT1
    EXITRIGHT1:
    JMP LEFT1
AA: JMP EXIT1
    LEFT1: 
    CMP moveDirectionLeftC1, 1
    JNZ DOWN1_1

    MOV AL,2
    MOV EXPECTEDSTATE1,AL
    CALL FAR PTR CheckColisionCar1 
    CMP CANMOVETRACK1,0
    JZ EXITLEFT1
    CMP CANMOVEOBSTACLE1,1
    JZ  LABELLEFT1
    CMP CANPASS_CAR1,1
    JZ LABELLEFT2
    JMP EXITLEFT1
    DOWN1_1:JMP DOWN1
    STARTLEFT1:

    CALL FAR PTR RESETCAR1
    MOV STATE1,2
    MOV AX,SPEED1
    SUB CENTER1,AX
    CALL FAR PTR ORIG1
    CMP ACTIVEUP_CAR1,1
    JE CONT7      
    CMP ACTIVEDOWN_CAR1,1
    JE CONT7
    CMP CANPASS_CAR1,1
    JE CONT7        
    CALL FAR PTR SPEEDUP1
    CALL FAR PTR SPEEDDOWN1
    CALL FAR PTR OBSTACLECAR1
    CALL FAR PTR PASSOBSTACLE_CAR1
CONT7:CALL FAR PTR CAR1

    JMP EXITLEFT1
    LABELLEFT1:
        CMP CHECKPASSEDOBSTACLE1,0
        JZ STARTLEFT1
        MOV CANPASS_CAR1,0
        MOV CHECKPASSEDOBSTACLE1,0
        JMP STARTLEFT1
    LABELLEFT2:
    MOV CHECKPASSEDOBSTACLE1,1
    JMP STARTLEFT1
    EXITLEFT1:
    JMP DOWN1

EXIT1:
    JMP CAR_EXIT


DOWN1:
    CMP moveDirectionDownC1, 1
    JNZ UP2_2

    MOV AL,3
    MOV EXPECTEDSTATE1,AL
    CALL FAR PTR CheckColisionCar1 
    CMP CANMOVETRACK1,0
    JZ EXITDOWN1
    CMP CANMOVEOBSTACLE1,1
    JZ  LABELDOWN1
    CMP CANPASS_CAR1,1
    JZ LABELDOWN2
    JMP EXITDOWN1
    STARTDOWN1:

    CALL FAR PTR RESETCAR1
    MOV STATE1,3
    JMP BRIDGE2
    UP2_2:JMP UP2
    BRIDGE2:
    MOV AX,320
    MOV DX,SPEED1
    MUL DX
    ADD CENTER1,AX
    CALL FAR PTR ORIG1
    CMP ACTIVEUP_CAR1,1
    JE CONT8       
    CMP ACTIVEDOWN_CAR1,1
    JE CONT8
    CMP CANPASS_CAR1,1
    JE CONT8      
    CALL FAR PTR SPEEDUP1
    CALL FAR PTR SPEEDDOWN1
    CALL FAR PTR OBSTACLECAR1
    CALL FAR PTR PASSOBSTACLE_CAR1
CONT8:CALL FAR PTR CAR1

    JMP EXITDOWN1
    LABELDOWN1:
        CMP CHECKPASSEDOBSTACLE1,0
        JZ STARTDOWN1
        MOV CANPASS_CAR1,0
        MOV CHECKPASSEDOBSTACLE1,0
        JMP STARTDOWN1
    LABELDOWN2:
    MOV CHECKPASSEDOBSTACLE1,1
    JMP STARTDOWN1
    EXITDOWN1:
    JMP UP2



UP2:
    CMP moveDirectionUpC2, 1
    JNZ RIGHT2_1

    MOV AL,0
    MOV EXPECTEDSTATE2,AL
    CALL FAR PTR CheckColisionCar2
    CMP CANMOVETRACK2,0
    JZ EXITUP2
    CMP CANMOVEOBSTACLE2,1
    JZ  LABELUP21
    CMP CANPASS_CAR2,1
    JZ LABELUP22
    JMP EXITUP2
    RIGHT2_1:JMP RIGHT2
    STARTUP2: 

    CALL FAR PTR RESETCAR2
    MOV STATE2,0
    MOV AX,320
    MOV DX,SPEED2
    MUL DX
    SUB CENTER2,AX
    CALL FAR PTR ORIG2
    CMP ACTIVEUP_CAR2,1
    JE CONT9      
    CMP ACTIVEDOWN_CAR2,1
    JE CONT9
    CMP CANPASS_CAR2,1
    JE CONT9   
    CALL FAR PTR SPEEDUP2
    CALL FAR PTR SPEEDDOWN2
    CALL FAR PTR OBSTACLECAR2
    CALL FAR PTR PASSOBSTACLE_CAR2
CONT9:CALL FAR PTR CAR2
    JMP EXITUP2
    LABELUP21:
        CMP CHECKPASSEDOBSTACLE2,0
        JZ STARTUP2
        MOV CANPASS_CAR2,0
        MOV CHECKPASSEDOBSTACLE2,0
        JMP STARTUP2
    LABELUP22:
    MOV CHECKPASSEDOBSTACLE2,1
    JMP STARTUP2
    EXITUP2:
    JMP RIGHT2



RIGHT2:
    CMP moveDirectionRightC2, 1
    JNZ EXITRIGHT2_1

    MOV AL,1
    MOV EXPECTEDSTATE2,AL
    CALL FAR PTR CheckColisionCar2 
    CMP CANMOVETRACK2,0
    JZ EXITRIGHT2
    CMP CANMOVEOBSTACLE2,1
    JZ  LABELRIGHT21
    CMP CANPASS_CAR2,1
    JZ LABELRIGHT22
    JMP EXITRIGHT2
    EXITRIGHT2_1: JMP EXITRIGHT2
    STARTRIGHT2: 

    CALL FAR PTR RESETCAR2
    MOV STATE2 ,1
    MOV AX,SPEED2
    ADD CENTER2,AX
    CALL FAR PTR ORIG2
    CMP ACTIVEUP_CAR2,1
    JE CONT10      
    CMP ACTIVEDOWN_CAR2,1
    JE CONT10
    CMP CANPASS_CAR2,1
    JE CONT10  
    CALL FAR PTR SPEEDUP2
    CALL FAR PTR SPEEDDOWN2
    CALL FAR PTR OBSTACLECAR2
    CALL FAR PTR PASSOBSTACLE_CAR2
CONT10:CALL FAR PTR CAR2
    JMP EXITRIGHT2
    LABELRIGHT21:
        CMP CHECKPASSEDOBSTACLE2,0
        JZ STARTRIGHT2
        MOV CANPASS_CAR2,0
        MOV CHECKPASSEDOBSTACLE2,0
        JMP STARTRIGHT2
    LABELRIGHT22:
    MOV CHECKPASSEDOBSTACLE2,1
    JMP STARTRIGHT2
    EXITRIGHT2:
    JMP LEFT2

AGAIN2:
    CMP POWCAR1,1
    JNE BBB
    CALL FAR PTR ACTIVATE_POWER_UP_CAR1
BBB:CMP POWCAR2,1
    JNE ASD
    CALL FAR PTR ACTIVATE_POWER_UP_CAR2
ASD:
    Delay
    JMP AGAIN

LEFT2:
    CMP moveDirectionLeftC2, 1
    JNZ DOWN2_1

    MOV AL,2
    MOV EXPECTEDSTATE2,AL
    CALL FAR PTR CheckColisionCar2 
    CMP CANMOVETRACK2,0
    JZ EXITLEFT2
    CMP CANMOVEOBSTACLE2,1
    JZ  LABELLEFT21
    CMP CANPASS_CAR2,1
    JZ LABELLEFT22
    JMP EXITLEFT2
    DOWN2_1:JMP DOWN2
    STARTLEFT2:

    CALL FAR PTR RESETCAR2
    MOV STATE2,2
    MOV AX,SPEED2
    SUB CENTER2,AX
    CALL FAR PTR ORIG2
    CMP ACTIVEUP_CAR2,1
    JE CONT11      
    CMP ACTIVEDOWN_CAR2,1
    JE CONT11
    CMP CANPASS_CAR2,1
    JE CONT11
    CALL FAR PTR SPEEDUP2
    CALL FAR PTR SPEEDDOWN2
    CALL FAR PTR OBSTACLECAR2
    CALL FAR PTR PASSOBSTACLE_CAR2
CONT11:CALL FAR PTR CAR2
     JMP EXITLEFT2
    LABELLEFT21:
        CMP CHECKPASSEDOBSTACLE2,0
        JZ STARTLEFT2
        MOV CANPASS_CAR2,0
        MOV CHECKPASSEDOBSTACLE2,0
        JMP STARTLEFT2
    LABELLEFT22:
    MOV CHECKPASSEDOBSTACLE2,1
    JMP STARTLEFT2
    EXITLEFT2:
    JMP DOWN2

BRIDGE1:JMP AGAIN2

DOWN2:
    CMP moveDirectionDownC2, 1
    JNZ BRIDGE1

    MOV AL,3
    MOV EXPECTEDSTATE2,AL
    CALL FAR PTR CheckColisionCar2 
    CMP CANMOVETRACK2,0
    JZ EXITDOWN2
    CMP CANMOVEOBSTACLE2,1
    JZ  LABELDOWN21
    CMP CANPASS_CAR2,1
    JZ LABELDOWN22
    JMP EXITDOWN2
    STARTDOWN2:

    CALL FAR PTR RESETCAR2
    MOV STATE2,3
    MOV AX,320
    MOV DX,SPEED2
    MUL DX
    ADD CENTER2,AX
    CALL FAR PTR ORIG2
    CMP ACTIVEUP_CAR2,1
    JE CONT12     
    CMP ACTIVEDOWN_CAR2,1
    JE CONT12
    CMP CANPASS_CAR2,1
    JE CONT12
    CALL FAR PTR SPEEDUP2
    CALL FAR PTR SPEEDDOWN2
    CALL FAR PTR OBSTACLECAR2
    CALL FAR PTR PASSOBSTACLE_CAR2
CONT12:CALL FAR PTR CAR2
    JMP EXITDOWN2
    LABELDOWN21:
        CMP CHECKPASSEDOBSTACLE2,0
        JZ STARTDOWN2
        MOV CANPASS_CAR2,0
        MOV CHECKPASSEDOBSTACLE2,0
        JMP STARTDOWN2
    LABELDOWN22:
    MOV CHECKPASSEDOBSTACLE2,1
    JMP STARTDOWN2
    EXITDOWN2:
DOWN2_5312:

    JMP AGAIN2

CAR_EXIT:

RET

Play ENDP